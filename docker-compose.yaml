services:
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/medical_db
      SPRING_DATASOURCE_USERNAME: sandoval
      SPRING_DATASOURCE_PASSWORD: salessa
      SPRING_PROFILES_ACTIVE: dev
    volumes:
      - ~/.m2:/root/.m2  # Cache do Maven
      - ./target:/app/target
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: ltservices/medical-sas-postgres:1.0.4
    environment:
      POSTGRES_DB: medical_db
      POSTGRES_USER: sandoval
      POSTGRES_PASSWORD: salessa
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sandoval -d medical_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  pipeline-watcher:
    image: eclipse-temurin:17-jdk-jammy
    volumes:
      - .:/workspace
      - ~/.m2:/root/.m2  # Cache compartilhado do Maven
    working_dir: /workspace
    command: >
      bash -c "apt-get update && apt-get install -y inotify-tools curl &&
      while true; do
        inotifywait -r -e modify,create,delete \
          --exclude='.*(/target|\.git|\.mvn/wrapper).*' \
          ./src ./pom.xml &&
        echo 'Mudanças detectadas. Executando verificações...' &&
        ./mvnw verify;
      done"
    depends_on:
      - db

volumes:
  postgres_data: